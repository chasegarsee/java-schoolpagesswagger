server.port=${PORT:2020}

management.endpoints.web.exposure.include=*
management.endpoint.health.show-details=always

#Feature that determines what happens when no accessors are found for a type
#(and there are no annotations to indicate it is meant to be serialized).
spring.jackson.serialization.FAIL_ON_EMPTY_BEANS=false

#drop n create table again, good for testing, comment this in production
spring.jpa.hibernate.ddl-auto=create
spring.datasource.initialization-mode=always

# For h2 database
#spring.h2.console.enabled=true
#spring.h2.console.path=/h2-console


# For PostgreSQL
spring.datasource.url=${SPRING_DATASOURCE_URL:jdbc:postgresql://ec2-174-129-208-118.compute-1.amazonaws.com:5432/dccijssi7c0i4g?user=puzuszzjsthnzy&password=8938beb84ce0996b3b4f923756805fca6acfed5fe96211bdf967eb339a581491&sslmode=require}
spring.datasource.username=${SPRING_DATASOURCE_USERNAME:dccijssi7c0i4g}
spring.datasource.password=${SPRING_DATASOURCE_PASSWORD:8938beb84ce0996b3b4f923756805fca6acfed5fe96211bdf967eb339a581491}
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true


spring.datasource.driverClassName=org.postgresql.Driver
spring.datasource.maxActive=10
spring.datasource.maxIdle=5
spring.datasource.minIdle=2
spring.datasource.initialSize=5
spring.datasource.removeAbandoned=true


server.ssl.key-store-type=PKCS12
# The path to the keystore containing the certificate
server.ssl.key-store=classpath:keystore/chasegarsee.p12
# The password used to generate the certificate
server.ssl.key-store-password=password
# The alias mapped to the certificate
server.ssl.key-alias=chasegarsee
# Run Spring Boot on HTTPS only




